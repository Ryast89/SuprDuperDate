import javax.swing.*;
public class SuperDuperDate2 {
    public static void main(String[] args) {
        int year = 0; //year the user was born
        int month = 0; //month the user was born
        int day = 0; //day the user was born
        int maxDays = 0; //the biggest possible day in the month
        String strMonth = ""; //the name of the month

		year = getYear(); 
		month = getMonth(); 
		strMonth = getName(month);
		maxDays = getMaxDays(month);
		
		//if the month is february, check if it is a leap year
		if (maxDays == 28) {
			maxDays = isLeap(year);
		}
		day = getDay(maxDays);
		System.out.println ("You were born " + strMonth + " " + year + " " + day);
	} //main

	//ask the user for the month they were born
	public static int getMonth () {
		String error = ""; //the error message
		String input = ""; //the user's number
		int num = 0;
		
		//keep asking until the user enters a valid number
		do {
			input = JOptionPane.showInputDialog(error + "Enter the month you were born");
			
			//if the user hits cancel, exit the program
			if (input == null) {
				System.exit(0);
			} 
			
			//Try change the input into a number, give an error if it can't
			try {
			num = Integer.parseInt(input);
			} catch (Exception e) {
				error = "Letters, symbols and punctuation are not allowed. \n If you didn't have any of that, your number may be too large. \n";
				continue;
			}	
			if (num < 1 || num > 12) {
				error = "Please enter a positive number between 1 and 12. \n";
				continue;
			}
			break;
		} while(true);
		return num;
	} //getMonth

	//ask the user for the year they were born
	public static int getYear () {
		String error = ""; //the error message
		String input = ""; //the user's number
		int num = 0;
		
		//keep asking until the user enters a valid number
		do {
			input = JOptionPane.showInputDialog(error + "Enter the year you were born");
		
			//exit the program if the user hits cancel
			if (input == null) {
				System.exit(0);
			}
			
			//Try change the input into a number, give an error if it can't
			try {
				num = Integer.parseInt(input);
			} catch (Exception e) {
				error = "Letters, symbols and punctuation are not allowed. \n If you didn't have any of that, your number may be too large. \n";
				continue;
			}
			if (num < 1800) {
				error = "Please enter a positive number above 1800. \n";
				continue;
			}
			break;
		} while(true);
		return num;
	} //getYear

	//ask the user what day they were born.
	public static int getDay (int maxDay) {
		String error = ""; //the error message
		String input = ""; //the user's number
		int num = 0;
		
		//keep asking until the user enters a valid number
		do {
			input = JOptionPane.showInputDialog(error + "Enter the day you were born");
			
			//exit the program if the user hits cancel
			if (input == null) {
				System.exit(0);
			}
			
			//Try change the input into a number, give an error if it can't
			try {
				num = Integer.parseInt(input);
			} catch (Exception e) {
			    error = "Letters, symbols and punctuation are not allowed. \n If you didn't have any of that, your number may be too large. \n";
				continue;
			}
			if (num < 1 || num > maxDay) {
				error = "Please enter a positive number between 1 and " + maxDay + ". \n";
				continue;
			}
			break;
		} while(true);
		return num;
	} //getDay

	//change the month number to the month name
	public static String getName (int month) {
		switch (month) {
			case 1: 
			return "January";
			case 2: 
			return "February";
			case 3: 
			return "March";
			case 4: 
			return "April";
			case 5: 
			return "May";
			case 6: 
			return "June";
			case 7:
			return "July";
			case 8:
			return "August";
			case 9:
			return "September";
			case 10: 
			return "October";
			case 11: 
			return "November";
			case 12:
			return "December"; 
			default:
			return "";
		}
	} //getName

	//get the number of days in each month
	public static int getMaxDays(int month) {
		switch (month) {
			case 1:
			case 3:
			case 5:
			case 7:
			case 8:
			case 10:
			case 12: 
			return 31;
			case 2: 
			return 28;
			case 4:
			case 6:
			case 9:
			case 11: 
			return 30;
			default: 
			return 0;
		}
	} //getMaxDays

	//check if the year is a leap year
	public static int isLeap(int year) {
	
		//a year is a leap year if it is divisible by 4 and NOT divisible by 100, or if it is divisible by 400
		if (year % 4 == 0 && year % 100 != 0 || year % 400 == 0) {
			return 29;
			} else {
				return 28;
			}
	} //isLeap

} //class
